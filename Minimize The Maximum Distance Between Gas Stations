int NumberOfGasStationRequired(long double distance, vector<int> &arr){
	int count=0;
	for(int i=1; i<arr.size(); i++){
		int numberInBetween=(arr[i]-arr[i-1])/distance;
		if(arr[i]-arr[i-1]/distance==numberInBetween+distance){
			numberInBetween++;
		}
		count+=numberInBetween;
	}
	return count;
}
double MinimiseTheMaximumDistance(vector<int> &arr, int k){
	int n=arr.size();
	long double low=0;
	long double high=0;
	for(int i=0; i<n; i++){
		high=max(high, (long double)(arr[i+1]-arr[i]));
	}
	long double difference=1e-6;
	while(high-low>difference){
		long double mid=(low+high)/2.0;
		int count=NumberOfGasStationRequired(mid, arr);
		if(count>k){
			low=mid;
		}
		else{
			high=mid;
		}
	}
	return high;
}

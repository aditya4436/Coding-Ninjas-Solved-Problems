#include <bits/stdc++.h> 
bool IsPaLindrome(string s, int start, int end){
    while(start<=end){
        if(s[start++]!=s[end--]){
            return false;
        }
    }
    return true;
}
void GeneratePalindromes(int index, string &s, vector<string> &path, vector<vector<string>> &res){
    if(index==s.size()){
        res.push_back(path);
        return;
    }
    for(int i=index; i<s.size(); i++){
        if(IsPaLindrome(s, index, i)){
            path.push_back(s.substr(index, i-index+1));
            GeneratePalindromes(i+1, s, path, res);
            path.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<vector<string>> res;
    vector<string> path;
    GeneratePalindromes(0, s, path, res);
    return res;
}

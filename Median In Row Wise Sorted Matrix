int UpperBound(vector<int> arr, int x, int m){
    int low=0, high=m-1, ans=m;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]>x){
            ans=mid;
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return ans;
}
int CountSmallEquals(vector<vector<int>> &arr, int n, int m, int x){
    int count=0;
    for(int i=0; i<n; i++){
        count+=UpperBound(arr[i], x, m);
    }
    return count;
}
int median(vector<vector<int>> &arr, int m, int n) {
    // Write your code here.
    n=arr.size();
    m=arr[0].size();
    int low=INT_MAX, high=INT_MIN;
    for(int i=0; i<n; i++){
        low=min(low, arr[i][0]);
        high=max(low, arr[i][m-1]);
    }
    int req=(n*m)/2;
    while(low<=high){
        int mid=(low+high)/2;
        int countSmall=CountSmallEquals(arr, n, m, mid);
        if(countSmall<=req){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return low;
}

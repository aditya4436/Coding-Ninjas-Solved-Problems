/*************************************************************

    Following is the Binary Tree node structure
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*************************************************************/
TreeNode *ConstructBST(vector<int> &preorder, int &index, int maxVal){
    if(index == preorder.size() || preorder[index] > maxVal){
        return NULL;
    }
    TreeNode *root=new TreeNode(preorder[index++]);
    root->left=ConstructBST(preorder, index, root->data);
    root->right=ConstructBST(preorder, index, maxVal);
    return root;
}
TreeNode *preOrderTree(vector<int> &preOrder)
{
// Write your code here.
    int i=0;
    return ConstructBST(preOrder, i, INT_MAX);
}

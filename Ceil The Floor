int FindFloor(vector<int> &arr, int target)
{
	int low=0, high=arr.size()-1;
	int ans=-1;
	while(low<=high)
	{
		int mid=(low+high)/2;
		if(arr[mid]<=target)
		{
			ans=arr[mid];
			low=mid+1;
		}
		else
		{
			high=mid-1;
		}
	}
	return ans;
}
int FindCeil(vector<int> &arr, int target)
{
	int low=0, high=arr.size()-1;
	int ans=-1;
	while(low<=high)
	{
		int mid=(low+high)/2;
		if(arr[mid]>=target)
		{
			ans=arr[mid];
			high=mid-1;
		}
		else
		{
			low=mid+1;
		}
	}
	return ans;
}
pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) 
{
	// Write your code here.
	int f=FindFloor(a, x);
	int c=FindCeil(a, x);
	return make_pair(f, c);
}

/**
 * Definition of doubly linked list:
 * class Node {
 * public:
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next, Node *prev) {
 *          this -> data = data;
 *          this -> prev = prev;
 *          this -> next = next;
 *      }
 * };
 *
 *************************************************************************/

vector<pair<int, int>> findPairs(Node* head, int k)
{
    // Write your code here.
    Node *left=head;
    Node *right=head;
    vector<pair<int, int>> arr;
    while(right->next){
        right=right->next;
    }
    while(left->data<right->data){
        if(left->data+right->data==k){
            arr.push_back(make_pair(left->data, right->data));
            left=left->next;
            right=right->prev;
        }
        else if(left->data+right->data>k){
            right=right->prev;
        }
        else{
            left=left->next;
        }
    }
    return arr;
}
